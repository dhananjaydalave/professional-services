DROP TABLE IF EXISTS %%TABLE%%;
DROP TABLE IF EXISTS %%TABLE%%_json;
DROP TABLE IF EXISTS %%TABLE%%_json_gz;
DROP TABLE IF EXISTS %%TABLE%%_parquet;
DROP TABLE IF EXISTS %%TABLE%%_parquet_gzip;
DROP TABLE IF EXISTS %%TABLE%%_parquet_snappy;
DROP TABLE IF EXISTS %%TABLE%%_avro;
DROP TABLE IF EXISTS %%TABLE%%_avro_deflate;
DROP TABLE IF EXISTS %%TABLE%%_avro_snappy;

CREATE EXTERNAL TABLE %%TABLE%% (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words int,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored int,
    positive int,
    neutral int,
    negative int,
    subjectivity_score double,
    subjective int,
    url string,
    comment_date string,
    comment_timestamp string,
    comment_hour int,
    comment_year int,
    comment_month int,
    comment_day int
)
ROW FORMAT SERDE
'org.apache.hive.hcatalog.data.JsonSerDe'
STORED AS TEXTFILE
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%'
;

msck repair table %%TABLE%%;

add jar /lib/hive/lib/hive-hcatalog-core-2.3.7.jar;
add jar /lib/hive/lib/json-1.8.jar;
add jar /lib/hive/lib/json-path-2.1.0.jar;
add jar /lib/hive/lib/json4s-ast_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-core_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-jackson_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-scalap_2.12-3.5.3.jar;


CREATE EXTERNAL TABLE %%TABLE%%_json (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words string,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored string,
    positive string,
    neutral string,
    negative string,
    subjectivity_score double,
    subjective string,
    url string,
    comment_date string,
    comment_timestamp string,
    comment_hour string,
    comment_year string,
    comment_month string,
    comment_day string
)
ROW FORMAT SERDE
'org.apache.hive.hcatalog.data.JsonSerDe'
STORED AS TEXTFILE
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/JSON/'
;

add jar /lib/hive/lib/hive-hcatalog-core-2.3.7.jar;
add jar /lib/hive/lib/json-1.8.jar;
add jar /lib/hive/lib/json-path-2.1.0.jar;
add jar /lib/hive/lib/json4s-ast_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-core_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-jackson_2.12-3.5.3.jar;
add jar /lib/hive/lib/json4s-scalap_2.12-3.5.3.jar;

CREATE EXTERNAL TABLE %%TABLE%%_json_gz (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words string,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored string,
    positive string,
    neutral string,
    negative string,
    subjectivity_score double,
    subjective string,
    url string,
    comment_date string,
    comment_timestamp string,
    comment_hour string,
    comment_year string,
    comment_month string,
    comment_day string
)
ROW FORMAT SERDE
'org.apache.hive.hcatalog.data.JsonSerDe'
STORED AS TEXTFILE
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/JSON_GZIP/'
;

CREATE EXTERNAL TABLE %%TABLE%%_avro (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS AVRO
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/AVRO'
;

CREATE EXTERNAL TABLE %%TABLE%%_avro_snappy (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS AVRO
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/AVRO_SNAPPY'
TBLPROPERTIES("avro.compress"="snappy")
;

CREATE EXTERNAL TABLE %%TABLE%%_avro_deflate (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS AVRO
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/AVRO_DEFLATE'
TBLPROPERTIES("avro.compress"="deflate")
;

CREATE EXTERNAL TABLE %%TABLE%%_parquet (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS PARQUET
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/PARQUET'
;

CREATE EXTERNAL TABLE %%TABLE%%_parquet_snappy (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS PARQUET
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/PARQUET_SNAPPY'
TBLPROPERTIES("parquet.compress"="SNAPPY")
;

CREATE EXTERNAL TABLE %%TABLE%%_parquet_gzip (
    comment_id string,
    subreddit string,
    author string,
    comment_text string,
    total_words bigint,
    reading_ease_score double,
    reading_ease string,
    reading_grade_level string,
    sentiment_score double,
    censored bigint,
    positive bigint,
    neutral bigint,
    negative bigint,
    subjectivity_score double,
    subjective bigint,
    url string,
    comment_date bigint,
    comment_timestamp bigint,
    comment_hour bigint,
    comment_year bigint,
    comment_month bigint,
    comment_day bigint
)
STORED AS PARQUET
LOCATION
 'gs://%%PROJECT_ID%%-services/%%TABLE%%_format_testing/PARQUET_GZIP'
TBLPROPERTIES("parquet.compress"="GZIP")
;

msck repair table %%TABLE%%;
msck repair table %%TABLE%%_json;
msck repair table %%TABLE%%_json_gz;
msck repair table %%TABLE%%_avro;
msck repair table %%TABLE%%_avro_snappy;
msck repair table %%TABLE%%_avro_deflate;
msck repair table %%TABLE%%_parquet;
msck repair table %%TABLE%%_parquet_snappy;
msck repair table %%TABLE%%_parquet_gzip;
